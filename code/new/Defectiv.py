# -*- coding: utf-8 -*-
# -------------------------------------------------------------
# Two-probe Configuration
# -------------------------------------------------------------

# -------------------------------------------------------------
# Left Electrode
# -------------------------------------------------------------

# Set up lattice
vector_a = [-12.68095444386112, 0.0, 0.0]*Angstrom
vector_b = [0.0, -43.73381263022966, 0.0]*Angstrom
vector_c = [0.0, 0.0, 5.537625098599001]*Angstrom
left_electrode_lattice = UnitCell(vector_a, vector_b, vector_c)

# Define elements
left_electrode_elements = [Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Sulfur, Sulfur, Sulfur, Sulfur, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Molybdenum, Molybdenum, Molybdenum,
                           Molybdenum, Sulfur, Sulfur, Sulfur, Sulfur, Sulfur, Sulfur, Sulfur,
                           Sulfur, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Molybdenum, Molybdenum,
                           Molybdenum, Molybdenum]

# Define coordinates
left_electrode_coordinates = [[  0.            ,  -6.244604210066,   0.230704462761],
                              [ -4.226984814616,  -6.244604210066,   0.230704462761],
                              [ -8.453969629245,  -6.244604210066,   0.230704462761],
                              [ -2.113492407314,  -8.326138946784,   0.230704462761],
                              [ -6.340477221931,  -8.326138946784,   0.230704462761],
                              [-10.567462036547,  -8.326138946784,   0.230704462761],
                              [  0.            , -10.407673683459,   0.230704462761],
                              [ -4.226984814616, -10.407673683459,   0.230704462761],
                              [ -8.453969629245, -10.407673683459,   0.230704462761],
                              [ -2.113492407314, -12.489208420133,   0.230704462761],
                              [ -6.340477221931, -12.489208420133,   0.230704462761],
                              [-10.567462036547, -12.489208420133,   0.230704462761],
                              [  0.            , -14.570743156851,   0.230704462761],
                              [ -4.226984814616, -14.570743156851,   0.230704462761],
                              [ -8.453969629245, -14.570743156851,   0.230704462761],
                              [ -2.113492407314, -16.652277893525,   0.230704462761],
                              [ -6.340477221931, -16.652277893525,   0.230704462761],
                              [-10.567462036547, -16.652277893525,   0.230704462761],
                              [ -2.113492407314, -25.499999999982,   0.230704462761],
                              [ -6.340477221931, -25.499999999982,   0.230704462761],
                              [-10.567462036547, -25.499999999982,   0.230704462761],
                              [  0.            , -27.5815347367  ,   0.230704462761],
                              [ -4.226984814616, -27.5815347367  ,   0.230704462761],
                              [ -8.453969629245, -27.5815347367  ,   0.230704462761],
                              [ -2.113492407314, -29.663069473374,   0.230704462761],
                              [ -6.340477221931, -29.663069473374,   0.230704462761],
                              [-10.567462036547, -29.663069473374,   0.230704462761],
                              [ -2.378992903244, -22.826072019441,   0.691548894542],
                              [ -5.54923151421 , -22.826072019441,   0.691548894542],
                              [ -8.719470125175, -22.826072019441,   0.691548894542],
                              [-11.88970873614 , -22.826072019441,   0.691548894542],
                              [ -2.113492407314,  -6.244604210066,   2.307313874738],
                              [ -6.340477221931,  -6.244604210066,   2.307313874738],
                              [-10.567462036547,  -6.244604210066,   2.307313874738],
                              [  0.            ,  -8.326138946784,   2.307313874738],
                              [ -4.226984814616,  -8.326138946784,   2.307313874738],
                              [ -8.453969629245,  -8.326138946784,   2.307313874738],
                              [ -2.113492407314, -10.407673683459,   2.307313874738],
                              [ -6.340477221931, -10.407673683459,   2.307313874738],
                              [-10.567462036547, -10.407673683459,   2.307313874738],
                              [  0.            , -12.489208420133,   2.307313874738],
                              [ -4.226984814616, -12.489208420133,   2.307313874738],
                              [ -8.453969629245, -12.489208420133,   2.307313874738],
                              [ -2.113492407314, -14.570743156851,   2.307313874738],
                              [ -6.340477221931, -14.570743156851,   2.307313874738],
                              [-10.567462036547, -14.570743156851,   2.307313874738],
                              [  0.            , -16.652277893525,   2.307313874738],
                              [ -4.226984814616, -16.652277893525,   2.307313874738],
                              [ -8.453969629245, -16.652277893525,   2.307313874738],
                              [  0.            , -25.499999999982,   2.307313874738],
                              [ -4.226984814616, -25.499999999982,   2.307313874738],
                              [ -8.453969629245, -25.499999999982,   2.307313874738],
                              [ -2.113492407314, -27.5815347367  ,   2.307313874738],
                              [ -6.340477221931, -27.5815347367  ,   2.307313874738],
                              [-10.567462036547, -27.5815347367  ,   2.307313874738],
                              [  0.            , -29.663069473374,   2.307313874738],
                              [ -4.226984814616, -29.663069473374,   2.307313874738],
                              [ -8.453969629245, -29.663069473374,   2.307313874738],
                              [ -2.376514508405, -21.233893995098,   2.538025721855],
                              [ -5.54675311937 , -21.233893995098,   2.538025721855],
                              [ -8.716991730336, -21.233893995098,   2.538025721855],
                              [-11.887230341301, -21.233893995098,   2.538025721855],
                              [ -0.791293867526, -19.641661826939,   3.461506670981],
                              [ -3.961532478491, -19.641661826939,   3.461506670981],
                              [ -7.131771089456, -19.641661826939,   3.461506670981],
                              [-10.302009700422, -19.641661826939,   3.461506670981],
                              [ -0.79131996091 , -22.825909323972,   3.461533033405],
                              [ -3.961558571876, -22.825909323972,   3.461533033405],
                              [ -7.131797182841, -22.825909323972,   3.461533033405],
                              [-10.302035793806, -22.825909323972,   3.461533033405],
                              [  0.            ,  -6.244604210066,   4.383923286714],
                              [ -4.226984814616,  -6.244604210066,   4.383923286714],
                              [ -8.453969629245,  -6.244604210066,   4.383923286714],
                              [ -2.113492407314,  -8.326138946784,   4.383923286714],
                              [ -6.340477221931,  -8.326138946784,   4.383923286714],
                              [-10.567462036547,  -8.326138946784,   4.383923286714],
                              [  0.            , -10.407673683459,   4.383923286714],
                              [ -4.226984814616, -10.407673683459,   4.383923286714],
                              [ -8.453969629245, -10.407673683459,   4.383923286714],
                              [ -2.113492407314, -12.489208420133,   4.383923286714],
                              [ -6.340477221931, -12.489208420133,   4.383923286714],
                              [-10.567462036547, -12.489208420133,   4.383923286714],
                              [  0.            , -14.570743156851,   4.383923286714],
                              [ -4.226984814616, -14.570743156851,   4.383923286714],
                              [ -8.453969629245, -14.570743156851,   4.383923286714],
                              [ -2.113492407314, -16.652277893525,   4.383923286714],
                              [ -6.340477221931, -16.652277893525,   4.383923286714],
                              [-10.567462036547, -16.652277893525,   4.383923286714],
                              [ -2.113492407314, -25.499999999982,   4.383923286714],
                              [ -6.340477221931, -25.499999999982,   4.383923286714],
                              [-10.567462036547, -25.499999999982,   4.383923286714],
                              [  0.            , -27.5815347367  ,   4.383923286714],
                              [ -4.226984814616, -27.5815347367  ,   4.383923286714],
                              [ -8.453969629245, -27.5815347367  ,   4.383923286714],
                              [ -2.113492407314, -29.663069473374,   4.383923286714],
                              [ -6.340477221931, -29.663069473374,   4.383923286714],
                              [-10.567462036547, -29.663069473374,   4.383923286714],
                              [ -0.793784767511, -21.23385061496 ,   5.306920635838],
                              [ -3.964023378476, -21.23385061496 ,   5.306920635838],
                              [ -7.134261989441, -21.23385061496 ,   5.306920635838],
                              [-10.304500600407, -21.23385061496 ,   5.306920635838]]*Angstrom

# Set up configuration
left_electrode = BulkConfiguration(
    bravais_lattice=left_electrode_lattice,
    elements=left_electrode_elements,
    cartesian_coordinates=left_electrode_coordinates
    )

# -------------------------------------------------------------
# Right Electrode
# -------------------------------------------------------------

# Set up lattice
vector_a = [-12.68095444386112, 0.0, 0.0]*Angstrom
vector_b = [0.0, -43.73381263022966, 0.0]*Angstrom
vector_c = [0.0, 0.0, 4.153218823954]*Angstrom
right_electrode_lattice = UnitCell(vector_a, vector_b, vector_c)

# Set up configuration
right_electrode = BulkConfiguration(
    bravais_lattice=right_electrode_lattice,
    elements=right_electrode_elements,
    cartesian_coordinates=right_electrode_coordinates
    )

# -------------------------------------------------------------
# Central Region
# -------------------------------------------------------------

# Set up lattice
vector_a = [-12.68095444386112, 0.0, 0.0]*Angstrom
vector_b = [0.0, -43.73381263022966, 0.0]*Angstrom
vector_c = [0.0, 0.0, 16.6128752958063]*Angstrom
central_region_lattice = UnitCell(vector_a, vector_b, vector_c)

# Define elements
central_region_elements = [Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Sulfur, Sulfur, Sulfur, Sulfur, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Molybdenum, Molybdenum, Molybdenum,
                           Molybdenum, Sulfur, Sulfur, Sulfur, Sulfur, Sulfur, Sulfur, Sulfur,
                           Sulfur, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Molybdenum, Molybdenum,
                           Molybdenum, Molybdenum, Sulfur, Sulfur, Sulfur, Sulfur, Sulfur,
                           Sulfur, Sulfur, Sulfur, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Molybdenum,
                           Molybdenum, Molybdenum, Molybdenum, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Sulfur, Sulfur, Sulfur, Sulfur, Sulfur, Sulfur, Sulfur, Sulfur,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Molybdenum, Molybdenum, Molybdenum,
                           Molybdenum, Sulfur, Sulfur, Sulfur, Sulfur, Sulfur, Sulfur, Sulfur,
                           Sulfur, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Molybdenum, Molybdenum,
                           Molybdenum, Molybdenum, Sulfur, Sulfur, Sulfur, Sulfur, Sulfur,
                           Sulfur, Sulfur, Sulfur, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold,
                           Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Gold, Molybdenum,
                           Molybdenum, Molybdenum, Molybdenum]

# Define coordinates
central_region_coordinates = [[  0.            ,  -6.244604210066,   0.230704462761],
                              [ -4.226984814616,  -6.244604210066,   0.230704462761],
                              [ -8.453969629245,  -6.244604210066,   0.230704462761],
                              [ -2.113492407314,  -8.326138946784,   0.230704462761],
                              [ -6.340477221931,  -8.326138946784,   0.230704462761],
                              [-10.567462036547,  -8.326138946784,   0.230704462761],
                              [  0.            , -10.407673683459,   0.230704462761],
                              [ -4.226984814616, -10.407673683459,   0.230704462761],
                              [ -8.453969629245, -10.407673683459,   0.230704462761],
                              [ -2.113492407314, -12.489208420133,   0.230704462761],
                              [ -6.340477221931, -12.489208420133,   0.230704462761],
                              [-10.567462036547, -12.489208420133,   0.230704462761],
                              [  0.            , -14.570743156851,   0.230704462761],
                              [ -4.226984814616, -14.570743156851,   0.230704462761],
                              [ -8.453969629245, -14.570743156851,   0.230704462761],
                              [ -2.113492407314, -16.652277893525,   0.230704462761],
                              [ -6.340477221931, -16.652277893525,   0.230704462761],
                              [-10.567462036547, -16.652277893525,   0.230704462761],
                              [ -2.113492407314, -25.499999999982,   0.230704462761],
                              [ -6.340477221931, -25.499999999982,   0.230704462761],
                              [-10.567462036547, -25.499999999982,   0.230704462761],
                              [  0.            , -27.5815347367  ,   0.230704462761],
                              [ -4.226984814616, -27.5815347367  ,   0.230704462761],
                              [ -8.453969629245, -27.5815347367  ,   0.230704462761],
                              [ -2.113492407314, -29.663069473374,   0.230704462761],
                              [ -6.340477221931, -29.663069473374,   0.230704462761],
                              [-10.567462036547, -29.663069473374,   0.230704462761],
                              [ -2.378992903244, -22.826072019441,   0.691548894542],
                              [ -5.54923151421 , -22.826072019441,   0.691548894542],
                              [ -8.719470125175, -22.826072019441,   0.691548894542],
                              [-11.88970873614 , -22.826072019441,   0.691548894542],
                              [ -2.113492407314,  -6.244604210066,   2.307313874738],
                              [ -6.340477221931,  -6.244604210066,   2.307313874738],
                              [-10.567462036547,  -6.244604210066,   2.307313874738],
                              [  0.            ,  -8.326138946784,   2.307313874738],
                              [ -4.226984814616,  -8.326138946784,   2.307313874738],
                              [ -8.453969629245,  -8.326138946784,   2.307313874738],
                              [ -2.113492407314, -10.407673683459,   2.307313874738],
                              [ -6.340477221931, -10.407673683459,   2.307313874738],
                              [-10.567462036547, -10.407673683459,   2.307313874738],
                              [  0.            , -12.489208420133,   2.307313874738],
                              [ -4.226984814616, -12.489208420133,   2.307313874738],
                              [ -8.453969629245, -12.489208420133,   2.307313874738],
                              [ -2.113492407314, -14.570743156851,   2.307313874738],
                              [ -6.340477221931, -14.570743156851,   2.307313874738],
                              [-10.567462036547, -14.570743156851,   2.307313874738],
                              [  0.            , -16.652277893525,   2.307313874738],
                              [ -4.226984814616, -16.652277893525,   2.307313874738],
                              [ -8.453969629245, -16.652277893525,   2.307313874738],
                              [  0.            , -25.499999999982,   2.307313874738],
                              [ -4.226984814616, -25.499999999982,   2.307313874738],
                              [ -8.453969629245, -25.499999999982,   2.307313874738],
                              [ -2.113492407314, -27.5815347367  ,   2.307313874738],
                              [ -6.340477221931, -27.5815347367  ,   2.307313874738],
                              [-10.567462036547, -27.5815347367  ,   2.307313874738],
                              [  0.            , -29.663069473374,   2.307313874738],
                              [ -4.226984814616, -29.663069473374,   2.307313874738],
                              [ -8.453969629245, -29.663069473374,   2.307313874738],
                              [ -2.376514508405, -21.233893995098,   2.538025721855],
                              [ -5.54675311937 , -21.233893995098,   2.538025721855],
                              [ -8.716991730336, -21.233893995098,   2.538025721855],
                              [-11.887230341301, -21.233893995098,   2.538025721855],
                              [ -0.791293867526, -19.641661826939,   3.461506670981],
                              [ -3.961532478491, -19.641661826939,   3.461506670981],
                              [ -7.131771089456, -19.641661826939,   3.461506670981],
                              [-10.302009700422, -19.641661826939,   3.461506670981],
                              [ -0.79131996091 , -22.825909323972,   3.461533033405],
                              [ -3.961558571876, -22.825909323972,   3.461533033405],
                              [ -7.131797182841, -22.825909323972,   3.461533033405],
                              [-10.302035793806, -22.825909323972,   3.461533033405],
                              [  0.            ,  -6.244604210066,   4.383923286714],
                              [ -4.226984814616,  -6.244604210066,   4.383923286714],
                              [ -8.453969629245,  -6.244604210066,   4.383923286714],
                              [ -2.113492407314,  -8.326138946784,   4.383923286714],
                              [ -6.340477221931,  -8.326138946784,   4.383923286714],
                              [-10.567462036547,  -8.326138946784,   4.383923286714],
                              [  0.            , -10.407673683459,   4.383923286714],
                              [ -4.226984814616, -10.407673683459,   4.383923286714],
                              [ -8.453969629245, -10.407673683459,   4.383923286714],
                              [ -2.113492407314, -12.489208420133,   4.383923286714],
                              [ -6.340477221931, -12.489208420133,   4.383923286714],
                              [-10.567462036547, -12.489208420133,   4.383923286714],
                              [  0.            , -14.570743156851,   4.383923286714],
                              [ -4.226984814616, -14.570743156851,   4.383923286714],
                              [ -8.453969629245, -14.570743156851,   4.383923286714],
                              [ -2.113492407314, -16.652277893525,   4.383923286714],
                              [ -6.340477221931, -16.652277893525,   4.383923286714],
                              [-10.567462036547, -16.652277893525,   4.383923286714],
                              [ -2.113492407314, -25.499999999982,   4.383923286714],
                              [ -6.340477221931, -25.499999999982,   4.383923286714],
                              [-10.567462036547, -25.499999999982,   4.383923286714],
                              [  0.            , -27.5815347367  ,   4.383923286714],
                              [ -4.226984814616, -27.5815347367  ,   4.383923286714],
                              [ -8.453969629245, -27.5815347367  ,   4.383923286714],
                              [ -2.113492407314, -29.663069473374,   4.383923286714],
                              [ -6.340477221931, -29.663069473374,   4.383923286714],
                              [-10.567462036547, -29.663069473374,   4.383923286714],
                              [ -0.793784767511, -21.23385061496 ,   5.306920635838],
                              [ -3.964023378476, -21.23385061496 ,   5.306920635838],
                              [ -7.134261989441, -21.23385061496 ,   5.306920635838],
                              [-10.304500600407, -21.23385061496 ,   5.306920635838],
                              [ -2.378992903244, -22.826072019441,   6.229173993158],
                              [ -5.54923151421 , -22.826072019441,   6.229173993158],
                              [ -8.719470125175, -22.826072019441,   6.229173993158],
                              [-11.88970873614 , -22.826072019441,   6.229173993158],
                              [ -2.378971914578, -19.641488000909,   6.229207776436],
                              [ -5.549210525543, -19.641488000909,   6.229207776436],
                              [ -8.719449136509, -19.641488000909,   6.229207776436],
                              [-11.889687747474, -19.641488000909,   6.229207776436],
                              [ -2.113492407314,  -6.244604210066,   6.460532698691],
                              [ -6.340477221931,  -6.244604210066,   6.460532698691],
                              [-10.567462036547,  -6.244604210066,   6.460532698691],
                              [  0.            ,  -8.326138946784,   6.460532698691],
                              [ -4.226984814616,  -8.326138946784,   6.460532698691],
                              [ -8.453969629245,  -8.326138946784,   6.460532698691],
                              [ -2.113492407314, -10.407673683459,   6.460532698691],
                              [ -6.340477221931, -10.407673683459,   6.460532698691],
                              [-10.567462036547, -10.407673683459,   6.460532698691],
                              [  0.            , -12.489208420133,   6.460532698691],
                              [ -4.226984814616, -12.489208420133,   6.460532698691],
                              [ -8.453969629245, -12.489208420133,   6.460532698691],
                              [ -2.113492407314, -14.570743156851,   6.460532698691],
                              [ -6.340477221931, -14.570743156851,   6.460532698691],
                              [-10.567462036547, -14.570743156851,   6.460532698691],
                              [  0.            , -16.652277893525,   6.460532698691],
                              [ -4.226984814616, -16.652277893525,   6.460532698691],
                              [ -8.453969629245, -16.652277893525,   6.460532698691],
                              [  0.            , -25.499999999982,   6.460532698691],
                              [ -4.226984814616, -25.499999999982,   6.460532698691],
                              [ -8.453969629245, -25.499999999982,   6.460532698691],
                              [ -2.113492407314, -27.5815347367  ,   6.460532698691],
                              [ -6.340477221931, -27.5815347367  ,   6.460532698691],
                              [-10.567462036547, -27.5815347367  ,   6.460532698691],
                              [  0.            , -29.663069473374,   6.460532698691],
                              [ -4.226984814616, -29.663069473374,   6.460532698691],
                              [ -8.453969629245, -29.663069473374,   6.460532698691],
                              [ -2.376514508405, -21.233893995098,   8.075650820454],
                              [ -5.54675311937 , -21.233893995098,   8.075650820454],
                              [ -8.716991730336, -21.233893995098,   8.075650820454],
                              [-11.887230341301, -21.233893995098,   8.075650820454],
                              [  0.            ,  -6.244604210066,   8.537142110668],
                              [ -4.226984814616,  -6.244604210066,   8.537142110668],
                              [ -8.453969629245,  -6.244604210066,   8.537142110668],
                              [ -2.113492407314,  -8.326138946784,   8.537142110668],
                              [ -6.340477221931,  -8.326138946784,   8.537142110668],
                              [-10.567462036547,  -8.326138946784,   8.537142110668],
                              [  0.            , -10.407673683459,   8.537142110668],
                              [ -4.226984814616, -10.407673683459,   8.537142110668],
                              [ -8.453969629245, -10.407673683459,   8.537142110668],
                              [ -2.113492407314, -12.489208420133,   8.537142110668],
                              [ -6.340477221931, -12.489208420133,   8.537142110668],
                              [-10.567462036547, -12.489208420133,   8.537142110668],
                              [  0.            , -14.570743156851,   8.537142110668],
                              [ -4.226984814616, -14.570743156851,   8.537142110668],
                              [ -8.453969629245, -14.570743156851,   8.537142110668],
                              [ -2.113492407314, -16.652277893525,   8.537142110668],
                              [ -6.340477221931, -16.652277893525,   8.537142110668],
                              [-10.567462036547, -16.652277893525,   8.537142110668],
                              [ -2.113492407314, -25.499999999982,   8.537142110668],
                              [ -6.340477221931, -25.499999999982,   8.537142110668],
                              [-10.567462036547, -25.499999999982,   8.537142110668],
                              [  0.            , -27.5815347367  ,   8.537142110668],
                              [ -4.226984814616, -27.5815347367  ,   8.537142110668],
                              [ -8.453969629245, -27.5815347367  ,   8.537142110668],
                              [ -2.113492407314, -29.663069473374,   8.537142110668],
                              [ -6.340477221931, -29.663069473374,   8.537142110668],
                              [-10.567462036547, -29.663069473374,   8.537142110668],
                              [ -0.791293867526, -19.641661826939,   8.999131769597],
                              [ -3.961532478491, -19.641661826939,   8.999131769597],
                              [ -7.131771089456, -19.641661826939,   8.999131769597],
                              [-10.302009700422, -19.641661826939,   8.999131769597],
                              [ -0.79131996091 , -22.825909323972,   8.999158132021],
                              [ -3.961558571876, -22.825909323972,   8.999158132021],
                              [ -7.131797182841, -22.825909323972,   8.999158132021],
                              [-10.302035793806, -22.825909323972,   8.999158132021],
                              [ -2.113492407314,  -6.244604210066,  10.613751522645],
                              [ -6.340477221931,  -6.244604210066,  10.613751522645],
                              [-10.567462036547,  -6.244604210066,  10.613751522645],
                              [  0.            ,  -8.326138946784,  10.613751522645],
                              [ -4.226984814616,  -8.326138946784,  10.613751522645],
                              [ -8.453969629245,  -8.326138946784,  10.613751522645],
                              [ -2.113492407314, -10.407673683459,  10.613751522645],
                              [ -6.340477221931, -10.407673683459,  10.613751522645],
                              [-10.567462036547, -10.407673683459,  10.613751522645],
                              [  0.            , -12.489208420133,  10.613751522645],
                              [ -4.226984814616, -12.489208420133,  10.613751522645],
                              [ -8.453969629245, -12.489208420133,  10.613751522645],
                              [ -2.113492407314, -14.570743156851,  10.613751522645],
                              [ -6.340477221931, -14.570743156851,  10.613751522645],
                              [-10.567462036547, -14.570743156851,  10.613751522645],
                              [  0.            , -16.652277893525,  10.613751522645],
                              [ -4.226984814616, -16.652277893525,  10.613751522645],
                              [ -8.453969629245, -16.652277893525,  10.613751522645],
                              [  0.            , -25.499999999982,  10.613751522645],
                              [ -4.226984814616, -25.499999999982,  10.613751522645],
                              [ -8.453969629245, -25.499999999982,  10.613751522645],
                              [ -2.113492407314, -27.5815347367  ,  10.613751522645],
                              [ -6.340477221931, -27.5815347367  ,  10.613751522645],
                              [-10.567462036547, -27.5815347367  ,  10.613751522645],
                              [  0.            , -29.663069473374,  10.613751522645],
                              [ -4.226984814616, -29.663069473374,  10.613751522645],
                              [ -8.453969629245, -29.663069473374,  10.613751522645],
                              [ -0.793784767511, -21.23385061496 ,  10.844545734438],
                              [ -3.964023378476, -21.23385061496 ,  10.844545734438],
                              [ -7.134261989441, -21.23385061496 ,  10.844545734438],
                              [-10.304500600407, -21.23385061496 ,  10.844545734438],
                              [ -2.378992903244, -22.826072019441,  11.766799091757],
                              [ -5.54923151421 , -22.826072019441,  11.766799091757],
                              [ -8.719470125175, -22.826072019441,  11.766799091757],
                              [-11.88970873614 , -22.826072019441,  11.766799091757],
                              [ -2.378971914578, -19.641488000909,  11.766832875036],
                              [ -5.549210525543, -19.641488000909,  11.766832875036],
                              [ -8.719449136509, -19.641488000909,  11.766832875036],
                              [-11.889687747474, -19.641488000909,  11.766832875036],
                              [  0.            ,  -6.244604210066,  12.690360934622],
                              [ -4.226984814616,  -6.244604210066,  12.690360934622],
                              [ -8.453969629245,  -6.244604210066,  12.690360934622],
                              [ -2.113492407314,  -8.326138946784,  12.690360934622],
                              [ -6.340477221931,  -8.326138946784,  12.690360934622],
                              [-10.567462036547,  -8.326138946784,  12.690360934622],
                              [  0.            , -10.407673683459,  12.690360934622],
                              [ -4.226984814616, -10.407673683459,  12.690360934622],
                              [ -8.453969629245, -10.407673683459,  12.690360934622],
                              [ -2.113492407314, -12.489208420133,  12.690360934622],
                              [ -6.340477221931, -12.489208420133,  12.690360934622],
                              [-10.567462036547, -12.489208420133,  12.690360934622],
                              [  0.            , -14.570743156851,  12.690360934622],
                              [ -4.226984814616, -14.570743156851,  12.690360934622],
                              [ -8.453969629245, -14.570743156851,  12.690360934622],
                              [ -2.113492407314, -16.652277893525,  12.690360934622],
                              [ -6.340477221931, -16.652277893525,  12.690360934622],
                              [-10.567462036547, -16.652277893525,  12.690360934622],
                              [ -2.113492407314, -25.499999999982,  12.690360934622],
                              [ -6.340477221931, -25.499999999982,  12.690360934622],
                              [-10.567462036547, -25.499999999982,  12.690360934622],
                              [  0.            , -27.5815347367  ,  12.690360934622],
                              [ -4.226984814616, -27.5815347367  ,  12.690360934622],
                              [ -8.453969629245, -27.5815347367  ,  12.690360934622],
                              [ -2.113492407314, -29.663069473374,  12.690360934622],
                              [ -6.340477221931, -29.663069473374,  12.690360934622],
                              [-10.567462036547, -29.663069473374,  12.690360934622],
                              [ -2.376514508405, -21.233893995098,  13.61327591907 ],
                              [ -5.54675311937 , -21.233893995098,  13.61327591907 ],
                              [ -8.716991730336, -21.233893995098,  13.61327591907 ],
                              [-11.887230341301, -21.233893995098,  13.61327591907 ],
                              [ -0.791293867526, -19.641661826939,  14.536756868197],
                              [ -3.961532478491, -19.641661826939,  14.536756868197],
                              [ -7.131771089456, -19.641661826939,  14.536756868197],
                              [-10.302009700422, -19.641661826939,  14.536756868197],
                              [ -0.79131996091 , -22.825909323972,  14.53678323062 ],
                              [ -3.961558571876, -22.825909323972,  14.53678323062 ],
                              [ -7.131797182841, -22.825909323972,  14.53678323062 ],
                              [-10.302035793806, -22.825909323972,  14.53678323062 ],
                              [ -2.113492407314,  -6.244604210066,  14.766970346598],
                              [ -6.340477221931,  -6.244604210066,  14.766970346598],
                              [-10.567462036547,  -6.244604210066,  14.766970346598],
                              [  0.            ,  -8.326138946784,  14.766970346598],
                              [ -4.226984814616,  -8.326138946784,  14.766970346598],
                              [ -8.453969629245,  -8.326138946784,  14.766970346598],
                              [ -2.113492407314, -10.407673683459,  14.766970346598],
                              [ -6.340477221931, -10.407673683459,  14.766970346598],
                              [-10.567462036547, -10.407673683459,  14.766970346598],
                              [  0.            , -12.489208420133,  14.766970346598],
                              [ -4.226984814616, -12.489208420133,  14.766970346598],
                              [ -8.453969629245, -12.489208420133,  14.766970346598],
                              [ -2.113492407314, -14.570743156851,  14.766970346598],
                              [ -6.340477221931, -14.570743156851,  14.766970346598],
                              [-10.567462036547, -14.570743156851,  14.766970346598],
                              [  0.            , -16.652277893525,  14.766970346598],
                              [ -4.226984814616, -16.652277893525,  14.766970346598],
                              [ -8.453969629245, -16.652277893525,  14.766970346598],
                              [  0.            , -25.499999999982,  14.766970346598],
                              [ -4.226984814616, -25.499999999982,  14.766970346598],
                              [ -8.453969629245, -25.499999999982,  14.766970346598],
                              [ -2.113492407314, -27.5815347367  ,  14.766970346598],
                              [ -6.340477221931, -27.5815347367  ,  14.766970346598],
                              [-10.567462036547, -27.5815347367  ,  14.766970346598],
                              [  0.            , -29.663069473374,  14.766970346598],
                              [ -4.226984814616, -29.663069473374,  14.766970346598],
                              [ -8.453969629245, -29.663069473374,  14.766970346598],
                              [ -0.793784767511, -21.23385061496 ,  16.382170833037],
                              [ -3.964023378476, -21.23385061496 ,  16.382170833037],
                              [ -7.134261989441, -21.23385061496 ,  16.382170833037],
                              [-10.304500600407, -21.23385061496 ,  16.382170833037]]*Angstrom

# Set up configuration
central_region = BulkConfiguration(
    bravais_lattice=central_region_lattice,
    elements=central_region_elements,
    cartesian_coordinates=central_region_coordinates
    )

device_configuration = DeviceConfiguration(
    central_region,
    [left_electrode, right_electrode],
    equivalent_electrode_lengths=[5.537625098599, 4.153218823954]*Angstrom,
    transverse_electrode_repetitions=[[1, 1], [1, 1]],
    )

# Add tags
device_configuration.addTags('Left Interface 0',  [  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,
                                                    10,  11,  12,  13,  14,  15,  16,  17,  18,  19,
                                                    20,  21,  22,  23,  24,  25,  26,  31,  32,  33,
                                                    34,  35,  36,  37,  38,  39,  40,  41,  42,  43,
                                                    44,  45,  46,  47,  48,  49,  50,  51,  52,  53,
                                                    54,  55,  56,  57,  70,  71,  72,  73,  74,  75,
                                                    76,  77,  78,  79,  80,  81,  82,  83,  84,  85,
                                                    86,  87,  88,  89,  90,  91,  92,  93,  94,  95,
                                                    96, 109, 110, 111, 112, 113, 114, 115, 116, 117,
                                                   118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
                                                   128, 129, 130, 131, 132, 133, 134, 135, 140, 141,
                                                   142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
                                                   152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
                                                   162, 163, 164, 165, 166, 175, 176, 177, 178, 179,
                                                   180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
                                                   190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
                                                   200, 201, 214, 215, 216, 217, 218, 219, 220, 221,
                                                   222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
                                                   232, 233, 234, 235, 236, 237, 238, 239, 240, 253,
                                                   254, 255, 256, 257, 258, 259, 260, 261, 262, 263,
                                                   264, 265, 266, 267, 268, 269, 270, 271, 272, 273,
                                                   274, 275, 276, 277, 278, 279])
device_configuration.addTags('Right Interface 0', [ 27,  28,  29,  30,  58,  59,  60,  61,  62,  63,
                                                    64,  65,  66,  67,  68,  69,  97,  98,  99, 100,
                                                   101, 102, 103, 104, 105, 106, 107, 108, 136, 137,
                                                   138, 139, 167, 168, 169, 170, 171, 172, 173, 174,
                                                   202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
                                                   212, 213, 241, 242, 243, 244, 245, 246, 247, 248,
                                                   249, 250, 251, 252, 280, 281, 282, 283])

# -------------------------------------------------------------
# Calculator
# -------------------------------------------------------------
#----------------------------------------
# Basis Set
#----------------------------------------

# Basis set for Sulfur

sulfur_3p = ConfinedOrbital(
    principal_quantum_number=3,
    angular_momentum=1,
    radial_cutoff_radius=5.58618376198*Bohr,
    confinement_start_radius=4.46894700958*Bohr,
    additional_charge=0,
    confinement_strength=17.9013087039*Hartree,
    confinement_power=1,
    radial_step_size=0.001*Bohr,
    )

sulfur_3p = ConfinedOrbital(
    principal_quantum_number=3,
    angular_momentum=1,
    radial_cutoff_radius=5.58618376198*Bohr,
    confinement_start_radius=4.46894700958*Bohr,
    additional_charge=0,
    confinement_strength=17.9013087039*Hartree,
    confinement_power=1,
    radial_step_size=0.001*Bohr,
    )

sulfur_3p_polarization = PolarizationOrbital(sulfur_3p)

sulfur_3p = ConfinedOrbital(
    principal_quantum_number=3,
    angular_momentum=1,
    radial_cutoff_radius=5.58618376198*Bohr,
    confinement_start_radius=4.46894700958*Bohr,
    additional_charge=0,
    confinement_strength=17.9013087039*Hartree,
    confinement_power=1,
    radial_step_size=0.001*Bohr,
    )

sulfur_3p_split = AnalyticalSplit(sulfur_3p, split_norm=0.15)

sulfur_3s = ConfinedOrbital(
    principal_quantum_number=3,
    angular_momentum=0,
    radial_cutoff_radius=4.51478507146*Bohr,
    confinement_start_radius=3.61182805717*Bohr,
    additional_charge=0,
    confinement_strength=22.1494486265*Hartree,
    confinement_power=1,
    radial_step_size=0.001*Bohr,
    )

sulfur_3s = ConfinedOrbital(
    principal_quantum_number=3,
    angular_momentum=0,
    radial_cutoff_radius=4.51478507146*Bohr,
    confinement_start_radius=3.61182805717*Bohr,
    additional_charge=0,
    confinement_strength=22.1494486265*Hartree,
    confinement_power=1,
    radial_step_size=0.001*Bohr,
    )

sulfur_3s_split = AnalyticalSplit(sulfur_3s, split_norm=0.15)

SulfurBasis = BasisSet(
    element=PeriodicTable.Sulfur,
    orbitals=[sulfur_3s, sulfur_3p, sulfur_3s_split, sulfur_3p_split, sulfur_3p_polarization],
    occupations=[2.0, 4.0, 0.0, 0.0, 0.0],
    hubbard_u=[0.0, 0.0, 0.0, 0.0, 0.0]*eV,
    dft_half_parameters=Automatic,
    filling_method=SphericalSymmetric,
    onsite_spin_orbit_split=[0.0, 0.0, 0.0, 0.0, 0.0]*eV,
    pseudopotential=NormConservingPseudoPotential("normconserving/S.GGAPBE.zip"),
    )


# Basis set for Molybdenum

molybdenum_4d = ConfinedOrbital(
    principal_quantum_number=4,
    angular_momentum=2,
    radial_cutoff_radius=5.94363171581*Bohr,
    confinement_start_radius=4.75490537265*Bohr,
    additional_charge=0,
    confinement_strength=16.8247301955*Hartree,
    confinement_power=1,
    radial_step_size=0.001*Bohr,
    )

molybdenum_4d = ConfinedOrbital(
    principal_quantum_number=4,
    angular_momentum=2,
    radial_cutoff_radius=5.94363171581*Bohr,
    confinement_start_radius=4.75490537265*Bohr,
    additional_charge=0,
    confinement_strength=16.8247301955*Hartree,
    confinement_power=1,
    radial_step_size=0.001*Bohr,
    )

molybdenum_4d_split = AnalyticalSplit(molybdenum_4d, split_norm=0.15)

molybdenum_5s = ConfinedOrbital(
    principal_quantum_number=5,
    angular_momentum=0,
    radial_cutoff_radius=7.94602904419*Bohr,
    confinement_start_radius=6.35682323535*Bohr,
    additional_charge=0,
    confinement_strength=12.5849024014*Hartree,
    confinement_power=1,
    radial_step_size=0.001*Bohr,
    )

molybdenum_5s = ConfinedOrbital(
    principal_quantum_number=5,
    angular_momentum=0,
    radial_cutoff_radius=7.94602904419*Bohr,
    confinement_start_radius=6.35682323535*Bohr,
    additional_charge=0,
    confinement_strength=12.5849024014*Hartree,
    confinement_power=1,
    radial_step_size=0.001*Bohr,
    )

molybdenum_5s_polarization = PolarizationOrbital(molybdenum_5s)

molybdenum_5s = ConfinedOrbital(
    principal_quantum_number=5,
    angular_momentum=0,
    radial_cutoff_radius=7.94602904419*Bohr,
    confinement_start_radius=6.35682323535*Bohr,
    additional_charge=0,
    confinement_strength=12.5849024014*Hartree,
    confinement_power=1,
    radial_step_size=0.001*Bohr,
    )

molybdenum_5s_split = AnalyticalSplit(molybdenum_5s, split_norm=0.15)

MolybdenumBasis = BasisSet(
    element=PeriodicTable.Molybdenum,
    orbitals=[molybdenum_4d, molybdenum_5s, molybdenum_4d_split, molybdenum_5s_split, molybdenum_5s_polarization],
    occupations=[5.0, 1.0, 0.0, 0.0, 0.0],
    hubbard_u=[0.0, 0.0, 0.0, 0.0, 0.0]*eV,
    dft_half_parameters=Automatic,
    filling_method=SphericalSymmetric,
    onsite_spin_orbit_split=[0.0, 0.0, 0.0, 0.0, 0.0]*eV,
    pseudopotential=NormConservingPseudoPotential("normconserving/MO.GGAPBE.zip"),
    )


# Basis set for Gold

gold_5d = ConfinedOrbital(
    principal_quantum_number=5,
    angular_momentum=2,
    radial_cutoff_radius=4.97009209077*Bohr,
    confinement_start_radius=3.97607367262*Bohr,
    additional_charge=0,
    confinement_strength=20.1203515294*Hartree,
    confinement_power=1,
    radial_step_size=0.001*Bohr,
    )

gold_5d = ConfinedOrbital(
    principal_quantum_number=5,
    angular_momentum=2,
    radial_cutoff_radius=4.97009209077*Bohr,
    confinement_start_radius=3.97607367262*Bohr,
    additional_charge=0,
    confinement_strength=20.1203515294*Hartree,
    confinement_power=1,
    radial_step_size=0.001*Bohr,
    )

gold_5d_split = AnalyticalSplit(gold_5d, split_norm=0.15)

gold_6s = ConfinedOrbital(
    principal_quantum_number=6,
    angular_momentum=0,
    radial_cutoff_radius=6.80550732918*Bohr,
    confinement_start_radius=5.44440586334*Bohr,
    additional_charge=0,
    confinement_strength=14.6939816773*Hartree,
    confinement_power=1,
    radial_step_size=0.001*Bohr,
    )

gold_6s = ConfinedOrbital(
    principal_quantum_number=6,
    angular_momentum=0,
    radial_cutoff_radius=6.80550732918*Bohr,
    confinement_start_radius=5.44440586334*Bohr,
    additional_charge=0,
    confinement_strength=14.6939816773*Hartree,
    confinement_power=1,
    radial_step_size=0.001*Bohr,
    )

gold_6s_polarization = PolarizationOrbital(gold_6s)

gold_6s = ConfinedOrbital(
    principal_quantum_number=6,
    angular_momentum=0,
    radial_cutoff_radius=6.80550732918*Bohr,
    confinement_start_radius=5.44440586334*Bohr,
    additional_charge=0,
    confinement_strength=14.6939816773*Hartree,
    confinement_power=1,
    radial_step_size=0.001*Bohr,
    )

gold_6s_split = AnalyticalSplit(gold_6s, split_norm=0.15)

GoldBasis = BasisSet(
    element=PeriodicTable.Gold,
    orbitals=[gold_5d, gold_6s, gold_5d_split, gold_6s_split, gold_6s_polarization],
    occupations=[10.0, 1.0, 0.0, 0.0, 0.0],
    hubbard_u=[0.0, 0.0, 0.0, 0.0, 0.0]*eV,
    dft_half_parameters=Automatic,
    filling_method=SphericalSymmetric,
    onsite_spin_orbit_split=[0.0, 0.0, 0.0, 0.0, 0.0]*eV,
    pseudopotential=NormConservingPseudoPotential("normconserving/AU.GGAPBE.zip"),
    )

basis_set = [
    SulfurBasis,
    MolybdenumBasis,
    GoldBasis,
    ]

#----------------------------------------
# Exchange-Correlation
#----------------------------------------
exchange_correlation = GGA.PBE

#----------------------------------------
# Numerical Accuracy Settings
#----------------------------------------
left_electrode_k_point_sampling = MonkhorstPackGrid(
    na=2,
    nb=1,
    nc=171,
    symmetries=[
        ([[ 1., 0., 0.],
          [ 0., 1., 0.],
          [ 0., 0., 1.]], [ 0., 0., 0.]),
        ([[-1., 0., 0.],
          [ 0.,-1., 0.],
          [ 0., 0.,-1.]], [ 0., 0., 0.]),
        ],
    force_timereversal=True,
    shift_to_gamma=[True, True, True],
    )
left_electrode_exact_exchange_parameters = ExactExchangeParameters(
    aux_basis_tolerance=0.001,
    number_of_waves=1024,
    maximum_wave_vector=50.0,
    integral_tolerance=0.0001,
    relative_screening_tolerance=0.01,
    )
left_electrode_numerical_accuracy_parameters = NumericalAccuracyParameters(
    density_mesh_cutoff=60.0*Hartree,
    k_point_sampling=left_electrode_k_point_sampling,
    radial_step_size=0.001*Bohr,
    density_cutoff=1e-06,
    interaction_max_range=20.0*Angstrom,
    number_of_reciprocal_points=1024,
    reciprocal_energy_cutoff=1250.0*Hartree,
    occupation_method=FermiDirac(1000.0*Kelvin*boltzmann_constant),
    exact_exchange_parameters=left_electrode_exact_exchange_parameters,
    compensation_charge_mesh_cutoff=75.0*Hartree,
    )

right_electrode_k_point_sampling = MonkhorstPackGrid(
    na=2,
    nb=1,
    nc=171,
    symmetries=[
        ([[ 1., 0., 0.],
          [ 0., 1., 0.],
          [ 0., 0., 1.]], [ 0., 0., 0.]),
        ([[-1., 0., 0.],
          [ 0.,-1., 0.],
          [ 0., 0.,-1.]], [ 0., 0., 0.]),
        ],
    force_timereversal=True,
    shift_to_gamma=[True, True, True],
    )
right_electrode_exact_exchange_parameters = ExactExchangeParameters(
    aux_basis_tolerance=0.001,
    number_of_waves=1024,
    maximum_wave_vector=50.0,
    integral_tolerance=0.0001,
    relative_screening_tolerance=0.01,
    )
right_electrode_numerical_accuracy_parameters = NumericalAccuracyParameters(
    density_mesh_cutoff=60.0*Hartree,
    k_point_sampling=right_electrode_k_point_sampling,
    radial_step_size=0.001*Bohr,
    density_cutoff=1e-06,
    interaction_max_range=20.0*Angstrom,
    number_of_reciprocal_points=1024,
    reciprocal_energy_cutoff=1250.0*Hartree,
    occupation_method=FermiDirac(1000.0*Kelvin*boltzmann_constant),
    exact_exchange_parameters=right_electrode_exact_exchange_parameters,
    compensation_charge_mesh_cutoff=75.0*Hartree,
    )

device_k_point_sampling = MonkhorstPackGrid(
    na=2,
    nb=1,
    nc=171,
    symmetries=[
        ([[ 1., 0., 0.],
          [ 0., 1., 0.],
          [ 0., 0., 1.]], [ 0., 0., 0.]),
        ([[-1., 0., 0.],
          [ 0.,-1., 0.],
          [ 0., 0.,-1.]], [ 0., 0., 0.]),
        ],
    force_timereversal=True,
    shift_to_gamma=[True, True, True],
    )
device_exact_exchange_parameters = ExactExchangeParameters(
    aux_basis_tolerance=0.001,
    number_of_waves=1024,
    maximum_wave_vector=50.0,
    integral_tolerance=0.0001,
    relative_screening_tolerance=0.01,
    )
device_numerical_accuracy_parameters = NumericalAccuracyParameters(
    density_mesh_cutoff=60.0*Hartree,
    k_point_sampling=device_k_point_sampling,
    radial_step_size=0.001*Bohr,
    density_cutoff=1e-06,
    interaction_max_range=20.0*Angstrom,
    number_of_reciprocal_points=1024,
    reciprocal_energy_cutoff=1250.0*Hartree,
    occupation_method=FermiDirac(1000.0*Kelvin*boltzmann_constant),
    exact_exchange_parameters=device_exact_exchange_parameters,
    compensation_charge_mesh_cutoff=75.0*Hartree,
    )

#----------------------------------------
# Iteration Control Settings
#----------------------------------------
left_electrode_iteration_control_parameters = IterationControlParameters(
    tolerance=0.0001,
    max_steps=100,
    algorithm=PulayMixer(),
    damping_factor=0.1,
    number_of_history_steps=20,
    start_mixing_after_step=0,
    mixing_variable=HamiltonianVariable,
    preconditioner=Preconditioner.Off,
    linear_dependence_threshold=0.0,
    max_exx_updates=50,
    non_convergence_behavior=ContinueCalculation(),
    enable_scf_stop_file=True,
    )

right_electrode_iteration_control_parameters = IterationControlParameters(
    tolerance=0.0001,
    max_steps=100,
    algorithm=PulayMixer(),
    damping_factor=0.1,
    number_of_history_steps=20,
    start_mixing_after_step=0,
    mixing_variable=HamiltonianVariable,
    preconditioner=Preconditioner.Off,
    linear_dependence_threshold=0.0,
    max_exx_updates=50,
    non_convergence_behavior=ContinueCalculation(),
    enable_scf_stop_file=True,
    )

device_iteration_control_parameters = IterationControlParameters(
    tolerance=0.0001,
    max_steps=100,
    algorithm=PulayMixer(),
    damping_factor=0.1,
    number_of_history_steps=20,
    start_mixing_after_step=0,
    mixing_variable=HamiltonianVariable,
    preconditioner=Preconditioner.Off,
    linear_dependence_threshold=0.0,
    max_exx_updates=50,
    non_convergence_behavior=ContinueCalculation(),
    enable_scf_stop_file=True,
    )

#----------------------------------------
# Poisson Solver Settings
#----------------------------------------
left_electrode_poisson_solver = FastFourier2DSolver(
    boundary_conditions=[[PeriodicBoundaryCondition(),PeriodicBoundaryCondition()],
                         [PeriodicBoundaryCondition(),PeriodicBoundaryCondition()],
                         [PeriodicBoundaryCondition(),PeriodicBoundaryCondition()]],
    order=2
    )

right_electrode_poisson_solver = FastFourier2DSolver(
    boundary_conditions=[[PeriodicBoundaryCondition(),PeriodicBoundaryCondition()],
                         [PeriodicBoundaryCondition(),PeriodicBoundaryCondition()],
                         [PeriodicBoundaryCondition(),PeriodicBoundaryCondition()]],
    order=2
    )

device_poisson_solver = FastFourier2DSolver(
    boundary_conditions=[[PeriodicBoundaryCondition(),PeriodicBoundaryCondition()],
                         [PeriodicBoundaryCondition(),PeriodicBoundaryCondition()],
                         [DirichletBoundaryCondition(),DirichletBoundaryCondition()]],
    order=2
    )

#----------------------------------------
# Contour Integral Settings
#----------------------------------------
equilibrium_contour = SemiCircleContour(
    integral_lower_bound=1.79336700318*Hartree,
    circle_eccentricity=0.3,
    logarithmic_bunching=0.3,
    circle_points=30,
    fermi_line_points=10,
    fermi_function_poles=8,
    )
non_equilibrium_contour = RealAxisContour(
    real_axis_point_density=0.001*Hartree,
    real_axis_infinitesimal=0.001*Hartree,
    real_axis_kbt_padding_factor=5.0,
    )
method = DoubleContour()
contour_parameters = ContourParameters(
    equilibrium_contour=equilibrium_contour,
    non_equilibrium_contour=non_equilibrium_contour,
    method=method,
    )

#----------------------------------------
# Device Algorithm Settings
#----------------------------------------
initial_density_type = NeutralAtom(
    electrode_constraint_length=10.0*Angstrom,
    )

self_energy_calculator_real = RecursionSelfEnergy(
    storage_strategy=SaveInMemory(),
    tolerance=1e-13,
    maximum_iteration=400,
    sparse_threshold=1e-12,
    enable_block_algorithm=True,
    )
self_energy_calculator_complex = RecursionSelfEnergy(
    storage_strategy=SaveInMemory(),
    tolerance=1e-13,
    maximum_iteration=400,
    sparse_threshold=1e-12,
    enable_block_algorithm=True,
    )
non_equilibrium_method = GreensFunction(
    processes_per_contour_point=1,
    )
equilibrium_method = GreensFunction(
    processes_per_contour_point=1,
    )
device_algorithm_parameters = DeviceAlgorithmParameters(
    initial_density_type=initial_density_type,
    electrode_constraint=ElectrodeConstraint.Off,
    self_energy_calculator_real=self_energy_calculator_real,
    self_energy_calculator_complex=self_energy_calculator_complex,
    non_equilibrium_method=non_equilibrium_method,
    equilibrium_method=equilibrium_method,
    store_grids=True,
    store_basis_on_grid=Automatic,
    scf_restart_step_length=0.1*Angstrom,
    enforce_different_electrodes=False,
    )

#----------------------------------------
# Parallel Parameters
#----------------------------------------
parallel_parameters = ParallelParameters(
    processes_per_neb_image=None,
    processes_per_individual=None,
    processes_per_bias_point=None,
    processes_per_saddle_search=1,
    )

#----------------------------------------
# Grimme DFTD3
#----------------------------------------
device_correction_extension = GrimmeDFTD3(
    exchange_correlation=GGA.PBE,
    global_scale_factor_6=1.0,
    damping_factor_6=1.217,
    global_scale_factor_8=0.722,
    damping_factor_8=1.0,
    maximum_neighbour_distance=30.0*Ang,
    include_three_body_term=False,
    )

#----------------------------------------
# Checkpoint Handler
#----------------------------------------
checkpoint_handler = CheckpointHandler(
    time_interval=0.5*Hour,
    )

#----------------------------------------
# Electrode Calculators
#----------------------------------------
left_electrode_calculator = LCAOCalculator(
    basis_set=basis_set,
    exchange_correlation=exchange_correlation,
    numerical_accuracy_parameters=left_electrode_numerical_accuracy_parameters,
    iteration_control_parameters=left_electrode_iteration_control_parameters,
    poisson_solver=left_electrode_poisson_solver,
    checkpoint_handler=checkpoint_handler,
    charge=0,
    )

right_electrode_calculator = LCAOCalculator(
    basis_set=basis_set,
    exchange_correlation=exchange_correlation,
    numerical_accuracy_parameters=right_electrode_numerical_accuracy_parameters,
    iteration_control_parameters=right_electrode_iteration_control_parameters,
    poisson_solver=right_electrode_poisson_solver,
    checkpoint_handler=checkpoint_handler,
    charge=0,
    )

#----------------------------------------
# Device Calculator
#----------------------------------------
calculator = DeviceLCAOCalculator(
    basis_set=basis_set,
    exchange_correlation=exchange_correlation,
    numerical_accuracy_parameters=device_numerical_accuracy_parameters,
    iteration_control_parameters=device_iteration_control_parameters,
    poisson_solver=device_poisson_solver,
    checkpoint_handler=checkpoint_handler,
    correction_extension=device_correction_extension,
    contour_parameters=contour_parameters,
    device_algorithm_parameters=device_algorithm_parameters,
    parallel_parameters=parallel_parameters,
    electrode_calculators=
        [left_electrode_calculator, right_electrode_calculator],
    electrode_voltages=( 0.0*Volt, 0.0*Volt),
    electrode_temperatures=( 300.0*Kelvin, 300.0*Kelvin),
    )

device_configuration.setCalculator(calculator)
nlprint(device_configuration)
device_configuration.update()
nlsave('/home/adminpc/soham/kaxit/defectiv.hdf5', device_configuration)

# -------------------------------------------------------------
# IV Curve
# -------------------------------------------------------------
biases = [0.000000, 0.333333, 0.666667, 1.000000]*Volt

kpoint_grid = MonkhorstPackGrid(
    na=4,
    )

iv_curve = IVCurve(
    configuration=device_configuration,
    biases=biases,
    energies=numpy.linspace(-2,2,101)*eV,
    kpoints=kpoint_grid,
    self_energy_calculator=RecursionSelfEnergy(),
    energy_zero_parameter=AverageFermiLevel,
    infinitesimal=1e-06*eV,
    selfconsistent_configurations_filename_prefix="ivcurve_selfconsistent_configuration_",
    log_filename_prefix="ivcurve_"
    )
nlsave('/home/adminpc/soham/kaxit/defectiv.hdf5', iv_curve)
nlprint(iv_curve)

# -------------------------------------------------------------
# Device Density Of States
# -------------------------------------------------------------
kpoint_grid = MonkhorstPackGrid(
    na=4,
    )

device_density_of_states = DeviceDensityOfStates(
    configuration=device_configuration,
    energies=numpy.linspace(-2,2,101)*eV,
    kpoints=kpoint_grid,
    contributions=All,
    energy_zero_parameter=AverageFermiLevel,
    infinitesimal=1e-06*eV,
    self_energy_calculator=RecursionSelfEnergy(storage_strategy=NoStorage()),
    )
nlsave('/home/adminpc/soham/kaxit/defectiv.hdf5', device_density_of_states)
nlprint(device_density_of_states)

# -------------------------------------------------------------
# Transmission Spectrum
# -------------------------------------------------------------
kpoint_grid = MonkhorstPackGrid(
    na=4,
    )

transmission_spectrum = TransmissionSpectrum(
    configuration=device_configuration,
    energies=None,
    kpoints=kpoint_grid,
    energy_zero_parameter=AverageFermiLevel,
    infinitesimal=1e-06*eV,
    self_energy_calculator=RecursionSelfEnergy(),
    enforce_zero_in_band_gap=True,
    )
nlsave('/home/adminpc/soham/kaxit/defectiv.hdf5', transmission_spectrum)
nlprint(transmission_spectrum)

# -------------------------------------------------------------
# Electrostatic Difference Potential
# -------------------------------------------------------------
electrostatic_difference_potential = ElectrostaticDifferencePotential(device_configuration)
nlsave('/home/adminpc/soham/kaxit/defectiv.hdf5', electrostatic_difference_potential)
